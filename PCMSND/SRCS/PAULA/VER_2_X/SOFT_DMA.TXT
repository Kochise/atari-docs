SOFT_DMA
========

    PAULA for ST!


Soft-DMA-Sound Treiber install‚iert en 'SSND'-Cookie, den op folgend
Struktur weist:
--------------------------------------------------------------------

    typedef struct {
        long            magic;          /* 'CLPF'   :-) */

        /* von Paula aufgerufene Funktionen: */
        void    (*SetAudioFrame)(int *data, int length, int range);
        void    (*Init_SDMA)(int *data, int size, int range, int sfreq);
        void    (*Exit_SDMA)(void);
        int     (*GetCPULoad)(void);    /* return cpu load */

        /* Paula RO vars: Welche Samplefrequenzen benutzt werden */
        unsigned int    samplefreq0,    /* unused... */
                        samplefreq1,    /* sfreq for index 1 */
                        samplefreq2,    /* etc */
                        samplefreq3;

        /* Paula R/W vars: */
        void    (*PaulaHook)(void);     /* call this after every bufferplay */
        int     boost;                  /* 1 = boost enabled. */

        /* Treiber info. */
        char    *sfreqtxt[4];

    } InfoBlock;

in ASM:
    dc.l    'CLPF'          ; magic
    dc.l    SetAudioFrame
    dc.l    Init_SDMA
    dc.l    Exit_SDMA
    dc.l    GetCPULoad

    dc.w    sf0,sf1,sf2,sf3

PaulaHook:
    dc.l    0               ;Paula schreibt hier rein.
Boost:
    dc.w    0               ;idem, wird vor jedem SetAudioFrame geupdated.

Samplefreq_textptrs:
    dc.l    0,0,0,0





Benotzt gett dat sou:

1. Du installeiers dein Cookie.

2. Paula sicht nom _SND Cookie - wann keen STE DMASND do ass, sicht
   mein Player nom 'SSND'-Cookie. Wann en den fonnt huet geschitt
   folgendes:

3. Paula mellt sech bei dir un andems den ACC en Pointer an d'Variable
   'PaulaHook' schreiwt. Dat ass den Pointer op eng
   Pseudo-Interrupt-Routinn dei dein Treiber opruffen muss, wann en eng
   AudioFrame ferdech gespillt huet.
   D'Paula liest awer och dei 4 Werter fir dei meiglech samplefreq.
   ran. Domatt kanns du deng eegen Werter uginn, zB: 8, 12 an 16 KHz.
   Den Text an der Haaptfenster „nnert net, awer dat mecht jo neischt,
   oder?

4. Wann d'Paula eppes wellt spillen, dann rifft et fir d'eischt deng
   Funktioun Init_SDMA op. Do kriss de d'Samplefreq. matgedeel an och
   eng 'pseudo'-Frame (eng dei nemmen Nullen enth„lt - et get drems fir
   eng 10 bis 20 ms Paus ze hun!). Souwisou gett fir den 'Dummy Call'
   och d'Operandenbreet als 0 Bit uginn.

5. Du muss d'Interrupten verwalten, weinst der Double Buffering Technik
   geseit da sou aus:
   Du spills d'AudioFrame of; wann dei ferdech ass, spills de dei
   n„chst programmeiert Frame. Dei eischte Keier ass dat 2mol dei
   selwecht hannerenen (mat Nullen gefellt). Soubals du ugefaangen hues
   dei nei Frame ofzespillen, riffs de PaulaHook op. Da rechent den ACC
   dei n„chsten Frame; wann en ferdech ass, rifft den nees
   SetAudioFrame op. Reischt do kriss de d'Adress an d'L„ngt vum
   n„chsten Frame matgedeelt. Pass op, all Wert kann sech zu all Moment
   „nneren (Frame-Length, Range [10 oder 16 bit])!
   Wann den SetAudioFrame awer nach net opgeruff ginn ass wann den
   aktuellen Frame schon ferdech ass kanns de den selwechten Frame nach
   eng Keier wiederhuelen (wei den Soundchip) oder awer einfach
   waarden, bis den Opruff kennt. Dat ass wichtech weinst dem
   Overload-verhaalen.

   Pass op: PaulaHook ass _net_ reentrant!!!! Well dei Routinn och mei
   laang dauert, soll den IRQlevel op 3 zerechgesaat gin. Wanns de dei
   Routinn opriffs wann se nach leeft da kraacht et.

   D'Verwaltung vun den Interrupts leit komplett bei dir. PaulaHook
   fummelt guer net un der Hardware.

   Ech garanteieren dir, dass d'Init_SDMA an Exit_SDMA-Calls emmer
   puerweis passen. Also kennt nie 2 mol en Init Call. (am Paula ass
   en 'Automate … ‚tats finis' dran...). D'Reihenfolg ass emmer:

    Init_SDMA, n*SetAudioFrame, Exit_SDMA







Routinen:
---------
* Et g‰llt d'Turbo C Opruffkonventioun: Skalar Parameteren kommen an
  d0-d2, den Rescht op den Stack. Adrežparameteren kommen an a0-a1, den
  Rescht op den Stack. D‚i opgeruffen Routinn d„rf nemmen d0-d2/a0-a1
  ver„nneren, den Rescht op ke Fall.

* D'Paula kemmert sech weider em den Double Buffering. Den Ennerscheed:
  du kriss deng Daten am internen Format vum Paula iwwergin. Dat
  heescht den Sample ass an SIGNED WORDS ofgespeichert. Vun denen 16
  bit (Bereich -32k..+32k) ginn benotzt:
    nothing             0 bit :-)           <<<<<<
    ST Stereo Normal:   9 bit pro Kanal
    ST Mono Normal:    10 bit               <<<<<<
    TT Stereo Normal:  15 bit p.K.
    TT Mono Normal:    16 bit
    TT Stereo Interp.: 15 bit p.K.
    TT Mono Interp.:   16 bit               <<<<<<

* D'Paula schalt automatesch op Monobetrieb em fir dein Soft DMA. Also
  kriss de 10 oder 16 bit Werter geliwwert. Wivill Bit genau benotzt
  sinn, kriss de als Parameter bei all SetFrame Call matgedeelt.


1. SetAudioFrame:
    Gett opgeruff, nodems eng Soundframe ferdech gerechent ass.
    Registers:  a0   Pointer op d'AudioFrame
                d0.w L„ngt vun der AudioFrame an Words
                d1.w Wivill Bit benotzt sin.


2. Init_SDMA:
    Initialiseiert den Sound DMA. Meng Originalroutinn programmeiert
    den Interrupt etc. an setzt d'Samplefrequenz.
    Registers:  a0:  Pointer op d‚i ‚ischt AudioFrame.
                     Dei g‰tt nemmen gebraucht fir d'Spill ze
                     lanceieren, dei kanns de dofir ignor‚ieren.
                     Allerdings muss den 'Interrupt' no circa 20 ms
                     kommen!  (10 ginn och :-)
                d0.w L„ngt vun der AudioFrame
                d1.w Wivill Bit benotzt sin.
                d2.w Samplefrequenz-Index (1,2 oder 3)

    Dei Routinn gett emmer am supermode opgeruff


3. Exit_SDMA:
    Stoppt den Butteck. Am 'Original' gett nach d'Frame
    ferdechgespillt, durno d„rf ken IRQ mei kommen.

    Dei Routinn gett emmer am supermode opgeruff an d„rf nemmen d0 an
    a0 „nneren!


4. GetCPULoad:
    Et ass un dir! Dei Funktioun gett aus der GEM-Ebene vum Paula
    opgeruff (d'Opruffheefechkeet & den Zeitpunkt ass net
    deterministesch) an muss d'CPU Belaaschtung an PROMILLE remginn.
    Register:   --
    Return:     d0.w - Cpu Load an Promille.

    Opgepasst: Werter iwwer 1000 sin net erlaabt. Soss zeechent den
    bloen 'Bargraph' knallhaart iwwert seng Grenzen raus. Fir den Ufank
    kanns de jo mol emmer 0 remgin :-)


5. Variable Boost:
    Steht op 1 wann den Boost ageschalt ass, an op 0 wann en ausgeschalt
    ass. Dei Variable gett firun all SetAudioFrame geupdated. Dat ass dat
    wat am mansten Changementer erfuerdert.



*****************************************************************************
* mojo dann :-)                                                             *
*****************************************************************************

