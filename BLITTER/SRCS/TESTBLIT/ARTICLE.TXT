TEST DE COLLISION DE SPRITES AU BLITTER

	De nombreux possesseurs de Falcon se demandent … quoi peut 
bien servir le blitter quand le 68030 de celui-ci est pratiquement 
aussi rapide pour afficher des sprites. Je dis que le blitter peut 
servir … ‡a, mais qu'en fait c'est un processeur qui peut avoir d'au-
tres fonctions int‚ressantes si on sait l'utiliser (ce qui semble loin 
d'ˆtre le cas de tout le monde).

	Il y a longtemps...

	Rappelez-vous certains jeux d'arcade (surtout les shoot'em ups) 
sur ST o— vous aviez superbement ‚vit‚ une cinquantaine de tirs 
adverses mais o— le programme en avait d‚cid‚ autrement. Ou 
bien d'autres jeux (de baston par exemple) o— vous pouviez toucher 
votre adversaire sans voir r‚ellement de contact. Tout ceci repose 
sur un fait unique : les collisions entre les sprites n'‚taient pas 
pr‚cises. Pourquoi ? parce que cela n‚cessite un travail cons‚quent 
pour le processeur qui n'avait pas que ‡a … faire : 99 pourcents des 
jeux sur ST n'utilisent que le processeur central pour afficher les 
sprites, ce qui fait un boulot monstre dans un jeu d'arcade.

	Blitter mon ami

	Je vous propose donc ici d'utiliser ce pauvre petit processeur dans 
le but de tester la collision entre deux sprites quelconques, et ce au 
pixel prŠs (eh oui !!). Le blitter permet toutes sortes de manipula-
tions de m‚moire: transfert, op‚rations logiques, d‚calages au 
pixel prŠs. C'est la combinaison astucieuse de ces tƒches qui nous 
permettra d'arriver … nos fins.
	Dans le cas pr‚sent, je me demandais si une op‚ration logique 
simple me permettrait de savoir si oui ou non j'ai une collision. 
R‚fl‚chissez : quelle fonction vous donne 1 si les deux op‚randes 
en entr‚e sont ‚gaux … 1, et z‚ro dans les autres cas ? Vous avez 
trouv‚ ? Non ? Pas encore ? Allez : c'est le AND !!! Sachant cela, il 
suffit de faire un AND entre les deux sprites, et les zones … 1 seront 
les zones o— il y a collision. Il n'y a plus qu'… programmer le blitter 
qui va nous faire ‡a gentiment et trŠs facilement.

	Le principe

	Avant de commencer, regardez la figure 1 qui doit traŒner quelque 
part par l…, elle vous pr‚sente le travail … r‚aliser. Une remarque: 
qu'allons nous utiliser pour faire nos op‚rations ? Simple: pour 
tester tous les pixels d'un sprite, qu'y a-t-il de mieux que le masque 
de celui-ci ? Nous allons donc utiliser les masques des sprites pour 
nos op‚rations (ce qui ne gˆne personne, sauf ceux qui font des 
jeux en True Color ( Y'en a au moins ? ) ). Bon, tout le monde est 
prˆt ? On peut y aller ?

	Tout d'abord, nos sprites sont rectangulaires. Il faut donc com-
mencer par tester si nos rectangles s'intersectent ou non.
Verticalement, on a intersection si :
	1) y1<=y2<y1+ly1 	( le sprite 2 commence au milieu du sprite 1) 
ou
	2) y2<=y1<y2+ly2	( le sprite 1 commence au milieu du sprite 2)
	Si c'est le cas, il faut calculer la position (diff‚rente dans les deux 
sprites) et la taille (identique pour les deux sprites) de la ZI (zone 
d'intersection).
	Dimensions :
	1) cty=ly1+y1-y2	( cty : hauteur de la ZI)
	   sy1=y2-y1	( sy1 : position y de la ZI dans le sprite 1)
	   sy2=0		( sy2 : idem que sy1 mais pour le sprite 2) ou
	2) cty=ly2+y2-y1
	   sy1=0
	   sy2=y1-y2
Finalement, si on a un petit sprite inclus dans un gros sprite, la ZI 
est r‚duite … ce petit sprite:
	cty=min(cty,ly1,ly2)
Horizontalement, l'algorithme est le mˆme:
	1) x1<=x2<x1+lx1 ou
	2) x2<=x1<x2+lx2
Dimensions :
	1) ctx=lx1+x1-x2	( ctx : largeur de la ZI)
	   sx1=x2-x1	( sx1 : position x de la ZI dans le sprite 2)
	   sx2=0		( sx2 : idem que sx1 mais pour le sprite 2) ou
	2) ctx=lx2+x2-x1
	   sx1=0
	   sx2=x1-x2
Puis : ctx=min(ctx,lx1,lx2)

	Nous avons maintenant tout ce qu'il nous faut, il n'y a plus qu'… 
faire les op‚rations logiques: il s'agit de trois op‚rations ‚l‚mentai-
res (voir figure 2):
	1) Copier la ZI du sprite 1 dans le buffer.
	2) Faire un AND entre la ZI du sprite 2 avec le buffer.
	Nous avons … ce moment dans le buffer les bits … 1 correspondant 
… une collision.
	3) Recopier avec un OR, le buffer dans un flag. Ce flag sera celui 
sur lequel le processeur fera son test.
	4) Agitez le tout, c'est prˆt.

	Le source

	Tout d'abord, quelle taille va-t-on donner au buffer ? Un ‚cran de 
320x200 fait 64000 pixels, soit 8000 octets en 1 plan. Si vous avez 
des sprites gigantesques (genre gros monstre de fin de niveau), 
vous voyez que la place m‚moire requise n'est pas ‚norme. J'ai 
pour ma part limit‚ le buffer … 4000 octets, ce qui me parait suffi-
sant (soit une zone maxi de 160x200 … 320x100 approximative-
ment).
	La ZI ‚tant positionn‚e … n'importe quel pixel horizontalement (et 
s–rement diff‚rente pour les deux sprites), il est n‚cessaire de d‚-
caler celle-ci dans les recopies que nous allons faire, pour les ali-
gner dans le buffer au mˆme pixel horizontal. Le blitter d‚cale tou-
jours les bits vers la droite, on n'a pas le choix. Si (sx(n) and 15) 
est diff‚rent de z‚ro, il faut d‚caler de 16-sx(n) pixels vers la droite 
(et donc d‚caler l'adresse destination de 1 mot vers la gauche au 
pr‚alable). De mˆme, si la ZI a une largeur nom multiple de 16 
pixels, il faudra lire un mot en plus (une largeur de 33 pixels fait 3 
mots … transf‚rer). On  effectue alors les deux recopies (simple 
pour le sprite 1, avec un AND pour le sprite 2).

 	Ensuite, comment savoir si j'ai des bits … 1 dans mon buffer ? Et 
bien le blitter va nous le dire: il va nous recopier avec un OR, tous 
les mots du buffer faisant partie de la zone d'intersection dans un 
mot de 16 bits (COLFLAG dans le source). A la fin, si ce mot vaut 
z‚ro, alors c'est qu'il n'y a pas de collision, sinon c'est la fin du 
monde (votre vaisseau vient d'ˆtre touch‚ par le missile ennemi qui 
vient de surgir du nuage rose derriŠre vous qui ‚tait invisible parce 
qu'il y avait du brouillard et qu'en bon pilote, vous n'avez pas allu-
m‚ vos phares lasers spectro-condens‚s pour ne pas vous faire 
rep‚rer par les plantes vertes de l'immeuble d'en face).
 
	Certains se demandent s–rement pourquoi faire un OR dans le 
flag pour finir, et pas tester directement le contenu du buffer (ce 
qui est simple et rapide). Je leur dirai que comme la ZI n'a pas for-
c‚ment une largeur multiple de 16 pixels, il leur faudrait aupara-
vant vider le buffer avant d'y faire les recopies. Alors qu'avec le 
blitter, celui-ci masque directement les bits n‚cessaires … gauche 
comme … droite, et ne pose donc pas de problŠme. De plus, ce sour-
ce ‚tait pr‚vu … l'origine pour mon STE, et un 68000 sans cache a 
du mal … ˆtre plus rapide qu'un blitter. Cette routine marche par-
faitement sur toute machine ‚quip‚e d'un blitter. Mais sur mon 
Falcon, un autre problŠme est apparu: le cache de donn‚es...

	C'est quoi le problŠme ?

	La routine ‚crit avec le blitter dans le mot COLFLAG. Ceci pose 
un problŠme quand le cache de donn‚es est activ‚. Le blitter tra-
vaille en effet en DMA. Le 68030, ayant mis COLFLAG … z‚ro au 
d‚but de la routine, ne sait pas que ce dernier a ‚t‚ modifi‚ par le 
blitter. Il faut donc d‚sactiver le cache avant de tester le flag pour 
forcer le 68030 … lire COLFLAG en m‚moire centrale et non dans 
son cache. Ainsi, le problŠme de coh‚rence cache/m‚moire est r‚so-
lu. Si on essaie de tester le buffer au 68030, il  faut le vider avant 
de faire le test. Il n'y a pas de problŠme quand la zone … vider est 
importante par rapport aux 256 octets de cache. Mais quand la ZI 
fait seulement 1 mot, il y a de grandes chances que ce dernier se 
trouve dans le cache et donc ici, vous aurez le mˆme problŠme: le 
blitter ‚crit dans le buffer, qui est en partie dans le cache, et quand 
vous testez les mots du buffers, le 68030 croit qu'ils sont toujours … 
z‚ro... N'oubliez pas que les 68040 et plus ont un cache plus gros. 
Donc je pense que le meilleur moyen est d'invalider le cache le 
temps de faire le(s) test(s). 

	Pour finir

	Pour conclure donc, le blitter n'est pas si mauvais que ‡a. Il est 
peut-ˆtre trop lent pour afficher des gros sprites en 640x480 en 8 
plans, mais dans ce cas, il vaut mieux l'utiliser intelligemment. Le 
Falcon est une machine tout … fait homogŠne, dommage qu'il n'y ait 
pas (encore) de jeu … la hauteur de ce dernier. Alors faites nous-en 
! On n'attend que ‡a !



										Patrice MANDIN