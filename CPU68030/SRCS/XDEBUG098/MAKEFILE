DOUBLES = -dDOUBLES=1
LC = lc -v -cm -cs -r0 -ja -j104 $(DOUBLES) $(LCOPT)
LCBIG = $(LC)
# this to avoid the BSS bug
G = clr; g

mon.prg: mon.o commands.o expr.o g.o machine.o masm.o syms.o p.o t.o s.o diss.o d.o stccpy.o mon.lnk symasm.o co.o mem.o mmu.o mmua.o mon.lnk 
	clink with mon.lnk
#	fix mon.prg
#	tthead -lm mon.prg

sysvar.mon: c:\help.s
	test\makevar c:\help.s sysvar.mon

# mon has line debug. And why not?
mon.o: mon.c window.h
	$(LCBIG) -d1 mon

diss.o: diss.c
	$(LCBIG) diss

commands.o: commands.c window.h
	$(LC) commands

expr.o: expr.c
	$(LC) expr

machine.o: machine.c
	$(LC) machine

masm.o: monasm.s
	$G monasm -omasm.o

symasm.o: symasm.s
	$G symasm

# WARNING: syms uses the optimiser!
syms.o: syms.c
	$(LC) -O syms

g.o: grafasm.s
	$G grafasm -og.o

p.o: proc.c window.h diss2.h
	$(LC) -op.o proc

t.o: text.c version.h
	$(LC) -ot.o text

s.o: source.c window.h
	$(LC) -os.o source

d.o: dialog.c window.h
	$(LC) -od.o dialog

stccpy.o: stccpy.s
	$G stccpy -ostccpy.o

mondb.prg: mondb.o commands.o expr.o g.o machine.o masm.o syms.o p.o t.o s.o diss.o d.o stccpy.o mon.lnk
	clink with mondb.lnk

mondb.o: mon.c window.h
	lc -v -r0 -d2 mondb

co.o: coproc.c
	$(LC) -cf -oco.o coproc

mem.o: malloc.c
	$(LC) -omem.o malloc

mmu.o: mmu.c
	$(LC) -ommu.o mmu

mmua.o: mmuasm.s
	$G mmuasm.s -ommua.o
