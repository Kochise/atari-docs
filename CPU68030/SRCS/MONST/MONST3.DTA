* Tabellen zu MONST3.INC
regchr2:  dc.b      1,'07ACDPRSU',0     ; ZulÑssige Zeichen fÅr die
                                        ; Registernamen
regtab2:  dc.b      'D0 D1 D2 D3 '      ; Zweite Tabelle der Registernamen
          dc.b      'D4 D5 D6 D7 '      ; (fÅr den Assembler)
          dc.b      'A0 A1 A2 A3 '
          dc.b      'A4 A5 A6 A7 '
          dc.b      'SP '
          dc.b      'SR CCR '
          dc.b      'USP'
          dc.b      0

adrmdchr: dc.b      2,'09AFLPSW%!$-',0  ; ZulÑssige Zeichen fÅr die
                                        ; Joker der Adressierungsarten
adrmdtab: dc.b      'D? '               ; Tabelle der Adressierungsarten
          dc.b      'A? '               ; (das Fragezeichen steht fÅr ein
          dc.b      'SP '               ; einziges beliebiges Zeichen,
          dc.b      '(A?)+ '            ; der Stern fÅr mehrere)
          dc.b      '(SP)+ '
          dc.b      '(A?) '
          dc.b      '(SP) '
          dc.b      '-(A?) '
          dc.b      '-(SP) '
          dc.b      '*(A?) '
          dc.b      '*(SP) '
          dc.b      '*(A?,??) '
          dc.b      '*(SP,??) '
          dc.b      '*(A?,??.?) '
          dc.b      '*(SP,??.?) '
          dc.b      '*(PC) '
          dc.b      '*(PC,??) '
          dc.b      '*(PC,??.?) '
          dc.b      '# '
          dc.b      'SR '
          dc.b      'CCR '
          dc.b      'USP'
          dc.b      0

mcinschr: dc.b      1,'AZ',0            ; ZulÑssige Zeichen fÅr die
                                        ; Assembler-Befehle
mcinstab: dc.b      'BRK '              ; (Pseudobefehl)
          dc.b      'NOP RESET '        ; Tabelle der 68000-Assembler-
          dc.b      'RTE RTR RTS '      ; Befehle
          dc.b      'TRAPV '
          dc.b      'SWAP EXT UNLK '
          dc.b      'TRAP STOP '
          dc.b      'JMP JSR PEA '
          dc.b      'NBCD '
          dc.b      'ST SF SHI SLS SCC SCS SNE SEQ '
          dc.b      'SVC SVS SPL SMI SGE SLT SGT SLE '
          dc.b      'TAS CLR NEG NEGX NOT TST '
          dc.b      'ABCD SBCD ADDX SUBX '
          dc.b      'ADDA SUBA CMPA MOVEA '
          dc.b      'ADDQ SUBQ '
          dc.b      'BTST BCHG BCLR BSET '
          dc.b      'CMPM '
          dc.b      'EOR EXG LEA '
          dc.b      'LINK '
          dc.b      'CHK '
          dc.b      'DIVU MULU DIVS MULS '
          dc.b      'CMP '
          dc.b      'ADD SUB AND OR '
          dc.b      'MOVE MOVEP MOVEQ '
          dc.b      'ADDI SUBI CMPI '
          dc.b      'ANDI EORI ORI '
          dc.b      'BRA BSR BHI BLS BCC BCS BNE BEQ '
          dc.b      'BVC BVS BPL BMI BGE BLT BGT BLE '
          dc.b      'DBT DBRA DBHI DBLS DBCC DBCS DBNE DBEQ '
          dc.b      'DBVC DBVS DBPL DBMI DBGE DBLT DBGT DBLE '
          dc.b      'ASL ASR LSL LSR ROXL ROXR ROL ROR '
          dc.b      'MOVEM '
          dc.b      'DC'
          dc.b      0

opctab:   dc.w      $4AFC               ; (Illegal)
          dc.w      $4E71,$4E70         ; Hexcodes der Befehle
          dc.w      $4E73,$4E77,$4E75
          dc.w      $4E76
          dc.w      $4840,$4800,$4E58
          dc.w      $4E40,$4E72
          dc.w      $4EC0,$4E80,$4840
          dc.w      $4800
          dc.w      $50C0,$51C0,$52C0,$53C0,$54C0,$55C0,$56C0,$57C0
          dc.w      $58C0,$59C0,$5AC0,$5BC0,$5CC0,$5DC0,$5EC0,$5FC0
          dc.w      $4AC0,$4200,$4400,$4000,$4600,$4A00
          dc.w      $C100,$8100,$D100,$9100
          dc.w      $D000,$9000,$B000,$0040
          dc.w      $5000,$5100
          dc.w      $0000,$0040,$0080,$00C0
          dc.w      $B108
          dc.w      $B100,$C100,$41C0
          dc.w      $4E50
          dc.w      $4180
          dc.w      $80C0,$C0C0,$81C0,$C1C0
          dc.w      $B000
          dc.w      $D000,$9000,$C000,$8000
          dc.w      $0000,$0008,$7000
          dc.w      $0600,$0400,$0C00
          dc.w      $0200,$0A00,$0000
          dc.w      $6000,$6100,$6200,$6300,$6400,$6500,$6600,$6700
          dc.w      $6800,$6900,$6A00,$6B00,$6C00,$6D00,$6E00,$6F00
          dc.w      $50C8,$51C8,$52C8,$53C8,$54C8,$55C8,$56C8,$57C8
          dc.w      $58C8,$59C8,$5AC8,$5BC8,$5CC8,$5DC8,$5EC8,$5FC8
          dc.w      $E100,$E000,$E100,$E000,$E100,$E000,$E100,$E000
          dc.w      $4880
          dc.w      $0000

cmbpnttab:dc.b      $1B                 ; Zeiger auf combtab
          dc.b      $1B,$1B             ; Bit 0-4: Nummer der erlaubten
          dc.b      $1B,$1B,$1B         ;          Kombination der Adres-
          dc.b      $1B                 ;          sierungsarten
          dc.b      $0C,$CC,$16         ; Bit 5-7: Erlaubte Operandengrîûen
          dc.b      $14,$14
          dc.b      $0D,$0D,$0D
          dc.b      $27
          dc.b      $07,$07,$07,$07,$07,$07,$07,$07
          dc.b      $07,$07,$07,$07,$07,$07,$07,$07
          dc.b      $07,$E7,$E7,$E7,$E7,$E7
          dc.b      $20,$20,$E0,$E0
          dc.b      $C1,$C1,$C1,$C1
          dc.b      $E4,$E4
          dc.b      $1C,$06,$06,$06
          dc.b      $E8
          dc.b      $EA,$8B,$0E
          dc.b      $0F
          dc.b      $13
          dc.b      $13,$13,$13,$13
          dc.b      $F5
          dc.b      $F8,$F8,$F9,$F9
          dc.b      $F0,$D1,$92
          dc.b      $E2,$E2,$E2
          dc.b      $E3,$E3,$E3
          dc.b      $85,$85,$85,$85,$85,$85,$85,$85
          dc.b      $85,$85,$85,$85,$85,$85,$85,$85
          dc.b      $09,$09,$09,$09,$09,$09,$09,$09
          dc.b      $09,$09,$09,$09,$09,$09,$09,$09
          dc.b      $F7,$F7,$F7,$F7,$F7,$F7,$F7,$F7
          dc.b      $DA
          dc.b      $C5

ortab:    dc.b      0
          dc.b      0,0
          dc.b      0,0,0
          dc.b      0
          dc.b      2,11,2
          dc.b      5,1
          dc.b      6,6,6
          dc.b      6
          dc.b      6,6,6,6,6,6,6,6
          dc.b      6,6,6,6,6,6,6,6
          dc.b      6,12,12,12,12,12
          dc.b      28,28,27,27
          dc.b      16,16,16,21
          dc.b      22,22
          dc.b      9,9,9,9
          dc.b      17
          dc.b      25,20,14
          dc.b      4
          dc.b      14
          dc.b      14,14,14,14
          dc.b      24
          dc.b      23,23,23,23
          dc.b      26,19,15
          dc.b      13,13,13
          dc.b      13,13,13
          dc.b      7,7,7,7,7,7,7,7
          dc.b      7,7,7,7,7,7,7,7
          dc.b      3,3,3,3,3,3,3,3
          dc.b      3,3,3,3,3,3,3,3
          dc.b      10,10,10,10,10,10,10,10
          dc.b      18
          dc.b      8

exttab:   dc.b      'BWLS'              ; Tabelle der Extensions

combtab:                                ; Tabelle der erlaubten
                                        ; EA-Kombinationen


* Gruppe 0:  ABCD
*            ADDX
*            SBCD
*            SUBX

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000100000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 1:  ADDA
*            CMPA
*            MOVEA
*            SUBA

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000100   ; Dn
          dc.w      %0000000000000100   ; An
          dc.w      %0000000000000100   ; (An)
          dc.w      %0000000000000100   ; (An)+
          dc.w      %0000000000000100   ; -(An)
          dc.w      %0000000000000100   ; d(An)
          dc.w      %0000000000000100   ; d(An,Rx)
          dc.w      %0000000000000100   ; $xxxx
          dc.w      %0000000000000100   ; $xxxxxxxx
          dc.w      %0000000000000100   ; d(PC)
          dc.w      %0000000000000100   ; d(PC,Rx)
          dc.w      %0000000000000100   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 2:  ADDI
*            CMPI
*            SUBI

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000001111111010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 3:  ANDI
*            EORI
*            ORI

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0110001111111010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 4:  ADDQ
*            SUBQ

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000001111111110   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 5:  Bcc
*            BRA
*            BSR
*            DC

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000001   ; $xxxx
          dc.w      %0000000000000001   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 6:  BCHG
*            BCLR
*            BSET

          dc.w      %0000000000000000   ; -
          dc.w      %0000001111111010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000001111111010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 7:  CLR
*            NBCD
*            NEG
*            NEGX
*            NOT
*            Scc
*            TAS
*            TST

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000001   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000001   ; (An)
          dc.w      %0000000000000001   ; (An)+
          dc.w      %0000000000000001   ; -(An)
          dc.w      %0000000000000001   ; d(An)
          dc.w      %0000000000000001   ; d(An,Rx)
          dc.w      %0000000000000001   ; $xxxx
          dc.w      %0000000000000001   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 8:  CMPM

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000010000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 9: DBcc

          dc.w      %0000000000000000   ; -
          dc.w      %0000001100000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 10: EOR

          dc.w      %0000000000000000   ; -
          dc.w      %0000001111111010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 11: EXG

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000110   ; Dn
          dc.w      %0000000000000110   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 12: EXT
*            SWAP

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000001   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 13: JMP
*            JSR
*            PEA

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000001   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000001   ; d(An)
          dc.w      %0000000000000001   ; d(An,Rx)
          dc.w      %0000000000000001   ; $xxxx
          dc.w      %0000000000000001   ; $xxxxxxxx
          dc.w      %0000000000000001   ; d(PC)
          dc.w      %0000000000000001   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 14: LEA

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000100   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000100   ; d(An)
          dc.w      %0000000000000100   ; d(An,Rx)
          dc.w      %0000000000000100   ; $xxxx
          dc.w      %0000000000000100   ; $xxxxxxxx
          dc.w      %0000000000000100   ; d(PC)
          dc.w      %0000000000000100   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 15: LINK

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0001000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 16: MOVE

          dc.w      %0000000000000000   ; -
          dc.w      %0110001111111110   ; Dn
          dc.w      %1000001111111110   ; An
          dc.w      %0110001111111110   ; (An)
          dc.w      %0110001111111110   ; (An)+
          dc.w      %0110001111111110   ; -(An)
          dc.w      %0110001111111110   ; d(An)
          dc.w      %0110001111111110   ; d(An,Rx)
          dc.w      %0110001111111110   ; $xxxx
          dc.w      %0110001111111110   ; $xxxxxxxx
          dc.w      %0110001111111110   ; d(PC)
          dc.w      %0110001111111110   ; d(PC,Rx)
          dc.w      %0110001111111110   ; #
          dc.w      %0000001111111110   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000100   ; USP


* Gruppe 17: MOVEP

          dc.w      %0000000000000000   ; -
          dc.w      %0000000001000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000010   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 18: MOVEQ

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 19: CHK
*            DIVS
*            DIVU
*            MULS
*            MULU

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000010   ; (An)
          dc.w      %0000000000000010   ; (An)+
          dc.w      %0000000000000010   ; -(An)
          dc.w      %0000000000000010   ; d(An)
          dc.w      %0000000000000010   ; d(An,Rx)
          dc.w      %0000000000000010   ; $xxxx
          dc.w      %0000000000000010   ; $xxxxxxxx
          dc.w      %0000000000000010   ; d(PC)
          dc.w      %0000000000000010   ; d(PC,Rx)
          dc.w      %0000000000000010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 20: STOP
*            TRAP

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000001   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 21: CMP

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000110   ; Dn
          dc.w      %0000000000000110   ; An
          dc.w      %0000000000000110   ; (An)
          dc.w      %0000000000000110   ; (An)+
          dc.w      %0000000000000110   ; -(An)
          dc.w      %0000000000000110   ; d(An)
          dc.w      %0000000000000110   ; d(An,Rx)
          dc.w      %0000000000000110   ; $xxxx
          dc.w      %0000000000000110   ; $xxxxxxxx
          dc.w      %0000000000000110   ; d(PC)
          dc.w      %0000000000000110   ; d(PC,Rx)
          dc.w      %0000000000000110   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 22: UNLK

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000001   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 23: ASd
*            LSd
*            ROd
*            ROXd

          dc.w      %0000000000000000   ; -
          dc.w      %0000000000000010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000001   ; (An)
          dc.w      %0000000000000001   ; (An)+
          dc.w      %0000000000000001   ; -(An)
          dc.w      %0000000000000001   ; d(An)
          dc.w      %0000000000000001   ; d(An,Rx)
          dc.w      %0000000000000001   ; $xxxx
          dc.w      %0000000000000001   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 24: ADD
*            SUB

          dc.w      %0000000000000000   ; -
          dc.w      %0000001111111110   ; Dn
          dc.w      %0000000000000110   ; An
          dc.w      %0000000000000110   ; (An)
          dc.w      %0000000000000110   ; (An)+
          dc.w      %0000000000000110   ; -(An)
          dc.w      %0000000000000110   ; d(An)
          dc.w      %0000000000000110   ; d(An,Rx)
          dc.w      %0000000000000110   ; $xxxx
          dc.w      %0000000000000110   ; $xxxxxxxx
          dc.w      %0000000000000110   ; d(PC)
          dc.w      %0000000000000110   ; d(PC,Rx)
          dc.w      %0000000000000110   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 25: AND
*            OR

          dc.w      %0000000000000000   ; -
          dc.w      %0000001111111010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000010   ; (An)
          dc.w      %0000000000000010   ; (An)+
          dc.w      %0000000000000010   ; -(An)
          dc.w      %0000000000000010   ; d(An)
          dc.w      %0000000000000010   ; d(An,Rx)
          dc.w      %0000000000000010   ; $xxxx
          dc.w      %0000000000000010   ; $xxxxxxxx
          dc.w      %0000000000000010   ; d(PC)
          dc.w      %0000000000000010   ; d(PC,Rx)
          dc.w      %0000000000000010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 26: MOVEM

          dc.w      %0000000000000000   ; -
          dc.w      %0000001111101000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000010   ; (An)
          dc.w      %0000000000000010   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000010   ; d(An)
          dc.w      %0000000000000010   ; d(An,Rx)
          dc.w      %0000000000000010   ; $xxxx
          dc.w      %0000000000000010   ; $xxxxxxxx
          dc.w      %0000000000000010   ; d(PC)
          dc.w      %0000000000000010   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 27: BRK (Breakpoint setzen)
*            NOP
*            RESET
*            RTE
*            RTR
*            RTS
*            TRAPV

          dc.w      %0000000000000001   ; -
          dc.w      %0000000000000000   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000000000000000   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Gruppe 28: BTST

          dc.w      %0000000000000000   ; -
          dc.w      %0000111111111010   ; Dn
          dc.w      %0000000000000000   ; An
          dc.w      %0000000000000000   ; (An)
          dc.w      %0000000000000000   ; (An)+
          dc.w      %0000000000000000   ; -(An)
          dc.w      %0000000000000000   ; d(An)
          dc.w      %0000000000000000   ; d(An,Rx)
          dc.w      %0000000000000000   ; $xxxx
          dc.w      %0000000000000000   ; $xxxxxxxx
          dc.w      %0000000000000000   ; d(PC)
          dc.w      %0000000000000000   ; d(PC,Rx)
          dc.w      %0000111111111010   ; #
          dc.w      %0000000000000000   ; SR
          dc.w      %0000000000000000   ; CCR
          dc.w      %0000000000000000   ; USP


* Fehlermeldungen
errmsg61: dc.b      'Registername expected',0
errmsg62: dc.b      'EA expected',0
errmsg63: dc.b      'Data-or addressregistername expected',0
errmsg64: dc.b      'Distance too large',0
errmsg65: dc.b      'Bracket expected',0
errmsg66: dc.b      'Extension not allowed',0
errmsg67: dc.b      'EA not allowed',0
errmsg68: dc.b      'Extension expected',0
errmsg69: dc.b      'Registername not allowed',0
errmsg89: dc.b      'EA-combination not allowed or EA(s) expected',0
errmsg90: dc.b      'Mnemonic expected',0
errmsg91: dc.b      'Word or integer expected',0
errmsg92: dc.b      'Vector expected',0
errmsg93: dc.b      '1..8 expected',0
errmsg94: dc.b      'Byte expected',0
errmsg95: dc.b      'Branch not allowed',0

