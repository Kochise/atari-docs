#id:MC68000
#type:16-/32-Bit Microprocessor

#mode:usr=0->USER
#mode:sup(default)=1->SUPERVISOR

#reg:D$x(x=0..7){usr}
#reg:D$x.n=[04sb]
#reg:D$x.b=[04sb]++D$x.n->DATA_REGISTER_BYTE
#reg:D$x.w=[08sb]++D$x.b->DATA_REGISTER_WORD
#reg:D$x.h=[16sb]
#reg:D$x.l=D$x.h++D$x.w->DATA_REGISTER_LONG_WORD

#reg:A$x(x=0..7){usr}
#reg:A$x.ea=[24ub]
#reg:A$x.l=[08ub]++A$x.ea->ADDRESS_REGISTER
#reg:SP=A7.l->STACK_POINTER
#reg:ISP=A7.l->INTERRUPT_STACK_POINTER
#reg:MSP=A7.l->MASTER_STACK_POINTER
#reg:USP{usr}=A7.l->USER_STACK_POINTER
#reg:SSP{sup}=A7.l->SYSTEM_STACK_POINTER

#reg:PC=[32ub]->PROGRAM_COUNTER

#reg:CCR.C=[01ub]->CARRY
#reg:CCR.V=[01ub]->OVERFLOW
#reg:CCR.Z=[01ub]->ZERO
#reg:CCR.N=[01ub]->NEGATIVE
#reg:CCR.X=[01ub]->EXTEND
#reg:CCR{usr}=[03ub]++CCR.X++CCR.N++CCR.Z++CCR.V++CCR.C->CONDITION_CODE_REGISTER
#reg:SB.I0=[01ub]->INTERRUPT_PRIORITY_MASK_0
#reg:SB.I1=[01ub]->INTERRUPT_PRIORITY_MASK_1
#reg:SB.I2=[01ub]->INTERRUPT_PRIORITY_MASK_2
#reg:SB.IPM=SR.I2++SR.I1++SR.I0->INTERRUPT_PRIORITY_MASK
#reg:SB.M=[01ub]->MASTER_OR_INTERRUPT_STATE
#reg:SB.S=[01ub]->SUPER_OR_USER_STATE
#reg:SB.AS=SB.S++SB.M->ACTIVE_STACK(b0_=USP, b10=ISP, b11=MSP)
#reg:SB.T0=[01ub]->TRACE_ENABLE_0
#reg:SB.T1=[01ub]->TRACE_ENABLE_1
#reg:SB.TE=SB.T1++SB.T0->TRACE_ENABLE(b00=NO_TRACE, b01=TRACE_ON_ANY_INSTRUCTION, b10=TRACE_ON_CHANGE_OF_FLOW, b11=UNDEFINED)
#reg:SB{sup}=SB.TE++SB.AS++[01ub]++SB.IPM
#reg:SR=SB++CCR->STATUS_REGISTER

#reg:FP$x(x=0..7)
#reg:FP$x.x=[80fb]->FLOATING_POINT_DATA_REGISTER

#reg:FPCR.MODE.RND=[02ub]->ROUNDING_MODE
#reg:FPCR.MODE.PREC=[02ub]->ROUNDING_PRECISION
#reg:FPCR.MODE=FPCR.MODE.PREC++FPCR.MODE.RND++[04ub=0]->MODE_CONTROL_BYTE
#reg:FPCR.ENABLE.INEX1=[01ub]->INEXACT_DECIMAL_INPUT
#reg:FPCR.ENABLE.INEX2=[01ub]->INEXACT_OPERATION
#reg:FPCR.ENABLE.DZ=[01ub]->DIVIDE_BY_ZERO
#reg:FPCR.ENABLE.UNFL=[01ub]->UNDERFLOW
#reg:FPCR.ENABLE.OVFL=[01ub]->OVERFLOW
#reg:FPCR.ENABLE.OPERR=[01ub]->OPERAND_ERROR
#reg:FPCR.ENABLE.SNAN=[01ub]->SIGNALING_NOT_A_NUMBER
#reg:FPCR.ENABLE.BSUN=[01ub]->BRANCH_OR_SET_ON_UNORDERED
#reg:FPCR.ENABLE=FPCR.ENABLE.BSUN++FPCR.ENABLE.SNAN++FPCR.ENABLE.OPERR++FPCR.ENABLE.OVFL++FPCR.ENABLE.UNFL++FPCR.ENABLE.DZ++FPCR.ENABLE.INEX2++FPCR.ENABLE.INEX1->EXCEPTION_ENABLE_BYTE
#reg:FPCR=[16ub=0r/_w]++FPCR.ENABLE++FPCR.MODE->FLOATING_POINT_CONTROL_REGISTER

#reg:FPSR.FPCC.NAN=[01ub]->NOT_A_NUMBER_OR_UNORDERED
#reg:FPSR.FPCC.I=[01ub]->INFINITY
#reg:FPSR.FPCC.Z=[01ub]->ZERO
#reg:FPSR.FPCC.N=[01ub]->NEGATIVE
#reg:FPSR.FPCC=[04ub]++FPSR.FPCC.N++FPSR.FPCC.Z++FPSR.FPCC.I++FPSR.FPCC.NAN->FPSR_CONDITION_CODE_BYTE
#reg:FPSR.QUOTIENT.QUOTIENT=[07ub]->SEVEN_LEAST_SIGNIFICANT_BITS_OF_QUOTIENT
#reg:FPSR.QUOTIENT.S=[01ub]->SIGN_OF_QUOTIENT
#reg:FPSR.QUOTIENT=FPSR.QUOTIENT.S++FPSR.QUOTIENT.QUOTIENT->FPSR_QUOTIENT_CONDITION_BYTE
#reg:FPSR.EXC.INEX1=[01ub]->INEXACT_DECIMAL_INPUT
#reg:FPSR.EXC.INEX2=[01ub]->INEXACT_OPERATION
#reg:FPSR.EXC.DZ=[01ub]->DIVIDE_BY_ZERO
#reg:FPSR.EXC.UNFL=[01ub]->UNDERFLOW
#reg:FPSR.EXC.OVFL=[01ub]->OVERFLOW
#reg:FPSR.EXC.OPERR=[01ub]->OPERAND_ERROR
#reg:FPSR.EXC.SNAN=[01ub]->SIGNALING_NOT_A_NUMBER
#reg:FPSR.EXC.BSUN=[01ub]->BRANCH_OR_SET_ON_UNORDERED
#reg:FPSR.ENABLE=FPSR.EXC.BSUN++FPSR.EXC.SNAN++FPSR.EXC.OPERR++FPSR.EXC.OVFL++FPSR.EXC.UNFL++FPSR.EXC.DZ++FPSR.EXC.INEX2++FPSR.EXC.INEX1->FPSR_EXCEPTION_STATUS_BYTE
#reg:FPSR.AEXC.INEX=[01ub]->INEXACT
#reg:FPSR.AEXC.DZ=[01ub]->DIVIDE_BY_ZERO
#reg:FPSR.AEXC.UNFL=[01ub]->UNDERFLOW
#reg:FPSR.AEXC.OVFL=[01ub]->OVERFLOW
#reg:FPSR.AEXC.OPERR=[01ub]->INVALID_OPERATION
#reg:FPSR.AEXC=FPSR.AEXC.OPERR++FPSR.AEXC.OVFL++FPSR.AEXC.UNFL++FPSR.AEXC.DZ++FPSR.AEXC.INEX++[03ub]->FPSR_ACCRUED_EXCEPTION_BYTE
#reg:FPSR=FPSR.FPCC++FPSR.QUOTIENT++FPSR.EXC++FPSR.AEXC->FLOATING_POINT_STATUS_REGISTER

#reg:FPIAR=[32ub]->FLOATING_POINT_INSTRUCTION_ADDRESS_REGISTER

#reg:AC0=[32ub]->ACCESS_CONTROL_REGISTER
#reg:AC1=[32ub]->
#reg:ACUSR=[32ub]->ACCESS_CONTROL_UNIT_STATUS_REGISTER
#reg:CAAR=[32ub]->CACHE_ADDRESS_REGISTER
#reg:CACR=[32ub]->CACHE_CONTROL_REGISTER
#reg:DACR0=[32ub]->DATA_ACCESS_CONTROL_REGISTER
#reg:DACR1=[32ub]->
#reg:DFC=[32ub]->DESTINATION_FUNCTION_CODE_REGISTER
#reg:DTT0=[32ub]->DATA_TRANSPARENT_TRANSLATION_REGISTER
#reg:DTT1=[32ub]->
#reg:IACR0=[32ub]->INSTRUCTION_ACCESS_CONTROL_REGISTER
#reg:IACR1=[32ub]->
#reg:ITT0=[32ub]->INSTRUCTION_TRANSPARENT_TRANSLATION_REGISTER
#reg:ITT1=[32ub]->
#reg:SFC=[32ub]->SOURCE_FUNCTION_CODE_REGISTER
#reg:TT0=[32ub]->TRANSPARENT_TRANSLATION_REGISTER
#reg:TT1=[32ub]->
#reg:VBR=[32ub]->VECTOR_BASE_REGISTER


#reg:AC=[32ub]->ACCESS_CONTROL_REGISTER
#reg:CAL=[32ub]->CURRENT_ACCESS_LEVEL_REGISTER
#reg:CRP=[32ub]->CPU_ROOT_POINTER
#reg:DRP=[32ub]->DMA_ROOT_POINTER
#reg:PCSR=[32ub]->PMMU_CONTROL_REGISTER
#reg:PMMUSR=[32ub]->PAGED_MEMORY_MANAGEMENT_UNIT_STATUS_REGISTER
#reg:MMUSR=[32ub]->MEMORY_MANAGEMENT_UNIT_STATUS_REGISTER
#reg:SCC=[32ub]->STACK_CHANGE_CONTROL_REGISTER
#reg:SRP=[32ub]->SUPERVISOR_ROOT_POINTER_REGISTER
#reg:TC=[32ub]->TRANSLATION_CONTROL_REGISTER
#reg:URP=[32ub]->USER_ROOT_POINTER
#reg:VAL=[32ub]->VALID_ACCESS_LEVEL_REGISTER






