ADDR	../include/ino.h	?^#define	ADDR(x)		(((di_addr[(x)*3]<<16) & 0xFF0000?
DEFERSIG	../include/signal.h	?^#define	DEFERSIG(x)	(int (*)())((int)(x) | 1)$?
Msys	sys.c	?^main()$?
REG	sys.c	?^# define	REG(x)		(cur_proc->reg->x)	/* Register ad?
SIGISDEFER	../include/signal.h	?^#define	SIGISDEFER(x)	(((int)(x) & 1) != 0)$?
SIGUNDEFER	../include/signal.h	?^#define	SIGUNDEFER(x)	(int (*)())((int)(x) &~ 1)$?
access	uft.c	?^access(name, mode)$?
addarg	sh.c	?^addarg(str, args)$?
addcom	linkld.c	?^addcom(comm, rel, sym)$?
addused	postbox.c	?^addused(add)$?
alarm	signal.c	?^alarm(seconds)$?
anysig	signal.c	?^anysig(){$?
b_ioctl	bio.c	?^b_ioctl(file, request, argp)$?
b_read	bio.c	?^b_read(file, buffer, nbytes)$?
b_seek	bio.c	?^b_seek(file, pos, mode)$?
b_write	bio.c	?^b_write(file, buffer, nbytes)$?
basci1	inbin.c	?^char *basci1(str,byte)$?
bflush	bcache.c	?^bflush()$?
byte3_prt	inbin.c	?^char *byte3_prt(str,ch)$?
c_ioctl	cio.c	?^c_ioctl(file, request, argp)$?
c_mfind	mount.c	?^c_mfind(mdev, dminor)$?
c_read	cio.c	?^c_read(file, buffer, nbytes)$?
c_write	cio.c	?^c_write(file, buffer, nbytes)$?
cat	inbin.c	?^cat(argc, argv)$?
catfile	inbin.c	?^catfile(name)$?
cd	sh.c	?^cd(argc, argv)$?
chdir	inode.c	?^chdir(path)$?
check_fd	uft.c	?^check_fd(fd)$?
checkev	signal.c	?^checkev(mode)$?
checkmev	signal.c	?^checkmev(){$?
chmod	inode.c	?^chmod(name, mode)$?
chown	new.c	?^chown(name, owner, group)$?
chredir	sh.c	?^chredir(argc, argv)$?
clearargs	sh.c	?^clearargs(args)$?
close	uft.c	?^close(fd)$?
clr_1_indir	physmap.c	?^clr_1_indir(mdev, minor, blk)$?
clr_2_indir	physmap.c	?^clr_2_indir(mdev, minor, blk)$?
clr_3_indir	physmap.c	?^clr_3_indir(mdev, minor, blk)$?
clrproc	concur.c	?^clrproc(){$?
comms	event.c	?^comms(pid, arg)$?
comp_segs	swap.c	?^comp_segs(){$?
con	inbin.c	?^con(buff)$?
core	signal.c	?^core(){$?
cp	inbin.c	?^cp(argc, argv)$?
creat	uft.c	?^creat(name, perm)$?
curpos	bio.c	?^curpos(fptr)$?
dev_flush	new.c	?^dev_flush()$?
devevent	event.c	?^devevent(majdev, mind)$?
dup	uft.c	?^dup(fd,nfd)$?
dup2	uft.c	?^dup2(fd, nfd)$?
dup_all	uft.c	?^dup_all(par, child)$?
echo	sh.c	?^echo(argc, argv)$?
endmem	mmu.c	?^endmem(majseg,minseg)$?
eopen	uft.c	?^eopen(name, mode)$?
error	sys.c	?^error(err)$?
excep_init	excep.c	?^excep_init(){$?
execute	sh.c	?^execute(name, argc, argv, env, eflag)$?
exinbin	exec.c	?^exinbin(name, argv, env)$?
extmem	mmu.c	?^extmem(majseg,minseg,size)$?
f_close	fio.c	?^f_close(file)$?
f_creat	fio.c	?^f_creat(file, iptr, mode, perm)$?
f_ioctl	fio.c	?^f_ioctl(file, request, argp)$?
f_open	fio.c	?^f_open(file, iptr, mode)$?
f_read	fio.c	?^f_read(file, buffer, nbytes)$?
f_seek	fio.c	?^f_seek(file, pos, mode)$?
f_write	fio.c	?^f_write(file, buffer, nbytes)$?
fileevent	event.c	?^fileevent(file)$?
flagwakeup	concur.c	?^flagwakeup(chan)$?
freeiptr	icache.c	?^freeiptr(iptr)$?
freslot	uft.c	?^freslot(slot)$?
fromfile	exec.c	?^fromfile(file,psize)$?
fsig	signal.c	?^fsig(proc)$?
fstat	uft.c	?^fstat(fd, ptr)$?
gen_open	uft.c	?^gen_open(name, mode, type, perm, fnc)$?
getbdev	new.c	?^getbdev(dev, pointer)$?
getblk	sort.c	?^getblk(freelist,block)$?
getblock	inbin.c	?^getblock(argc,argv)$?
getbuf	bcache.c	?^getbuf(mdev, minor, block, mode)$?
getcdev	new.c	?^getcdev(dev, pointer)$?
getdiptr	icache.c	?^getdiptr(b_ptr, ino)$?
getfree	super.c	?^getfree(mdev, min_dev)$?
getgid	sys.c	?^getgid(){$?
getibuf	icache.c	?^getibuf(mdev, dminor, ino)$?
getin	sh.c	?^getin(str)$?
getiptr	icache.c	?^getiptr(mdev, dminor, ino)$?
getline	sh.c	?^getline(file, line)$?
getmem	mmu.c	?^getmem(majseg,size)$?
getnext	sort.c	?^getnext(freelist,last)$?
getsarea	swap.c	?^getsarea(totals,type)$?
getseg	memory.c	?^getseg(seg, mem)$?
getslot	uft.c	?^getslot(){$?
getsseg	swap.c	?^getsseg(totals)$?
gettext	swap.c	?^gettext(swap)$?
getuid	sys.c	?^getuid(){$?
hatoi	inbin.c	?^hatoi(str)$?
hex_asc	inbin.c	?^hex_asc(ch)$?
i_access	inode.c	?^i_access(iptr, mode)$?
i_find	icache.c	?^i_find(mdev, dminor, ino)$?
i_raccess	inode.c	?^i_raccess(iptr, mode)$?
iexpand	icache.c	?^iexpand(iptr, n)$?
if	sys.c	?^	if(REG(d0) == -1) error(-1);$?
iflush	icache.c	?^iflush()$?
inbin	exec.c	?^inbin(name)$?
infile	exec.c	?^infile(file, psize)$?
inswap	swap.c	?^inswap(object, psize)$?
ioctl	uft.c	?^ioctl(fd, request, argp)$?
isdir	icache.c	?^isdir(iptr)$?
isize	icache.c	?^isize(iptr)$?
issig	signal.c	?^issig(proc)$?
istat	inode.c	?^istat(iptr, statptr)$?
istermsig	signal.c	?^istermsig(proc)$?
itrunc	physmap.c	?^itrunc(iptr)$?
iwrite	icache.c	?^iwrite(iptr)$?
kexece	exec.c	?^kexece(name, argv, env)$?
kexit	concur.c	?^kexit(state)$?
kfork	exec.c	?^kfork(){$?
kill	exec.c	?^kill(pid, sig)$?
kwait	concur.c	?^kwait(){$?
link	inode.c	?^link(name1, name2)$?
linkld	linkld.c	?^linkld(file, textadd, filhdr)$?
lock	new.c	?^lock(flag)$?
lockfree	super.c	?^lockfree(mdev, min_dev)$?
lseek	uft.c	?^lseek(fd, off, mode)$?
lss	inbin.c	?^lss(argc, argv)$?
m_find	mount.c	?^m_find(mdev, dminor, ino)$?
m_free	mount.c	?^m_free(mdev, dminor, ino)$?
m_getiptr	mount.c	?^m_getiptr(iptr, nami, mounted)$?
m_volparent	mount.c	?^m_volparent(iptr)$?
mach_fdon	machine.c	?^mach_fdon(){$?
mach_init	machine.c	?^mach_init(){$?
mach_shut	machine.c	?^mach_shut(){$?
mach_tick	machine.c	?^mach_tick(){$?
makefree	super.c	?^makefree(mdev, min_dev, bno)$?
makeifree	super.c	?^makeifree(mdev, min_dev, fi)$?
mem_init	memory.c	?^mem_init(){$?
memend	mmu.c	?^memend(majseg,minseg)$?
memget	memory.c	?^memget(seg, mem)$?
meminuse	memory.c	?^meminuse(seg)$?
memnuse	memory.c	?^memnuse(seg)$?
memset	memory.c	?^memset(seg, mem)$?
memstart	mmu.c	?^memstart(majseg,minseg)$?
memuse	memory.c	?^memuse(seg)$?
mknod	inode.c	?^mknod(name, mode, addr)$?
mount	mount.c	?^mount(special, name, rwflag)$?
moveseg	swap.c	?^moveseg(from, to)$?
msgadd	postbox.c	?^msgadd(new, old)$?
msgcheck	postbox.c	?^msgcheck(post)$?
msgexit	postbox.c	?^msgexit(){$?
msgsend	postbox.c	?^msgsend(post)$?
msgwait	postbox.c	?^msgwait(post)$?
mv	inbin.c	?^mv(argc, argv)$?
namlock	inode.c	?^namlock(name, mode, iptr)$?
newproc	concur.c	?^*newproc(){$?
onfile	event.c	?^onfile(file, dof)$?
open	uft.c	?^open(name, mode)$?
openfiles	sh.c	?^openfiles(){$?
p_status	exec.c	?^p_status(no,pointer)$?
panic	messg.c	?^panic(messg)$?
parse	sh.c	?^parse(cptr, argv)$?
pause	new.c	?^pause(){$?
physblk	physmap.c	?^physblk(n, i_ptr, mode)$?
pipe	pipe.c	?^pipe(fildes)$?
pipeopen	pipe.c	?^pipeopen(fw, fr)$?
pmem	inbin.c	?^pmem(argc, argv)$?
postadd	postbox.c	?^postadd(add)$?
prel	linkld.c	?^prel(rel)$?
printd	messg.c	?^printd(val)$?
printf	messg.c	?^printf(fmt, args)$?
printk	sh.c	?^printk(fmt, args)$?
printks	sh.c	?^printks(str)$?
printkx	sh.c	?^printkx(var)$?
printps	tsys.c	?^printps(proc)$?
prints	messg.c	?^prints(str)$?
printst	tsys.c	?^printst(proc)$?
printu	messg.c	?^printu(val)$?
printx	messg.c	?^printx(var)$?
ps	tsys.c	?^ps(){$?
psig	signal.c	?^psig(mode)$?
psize	swap.c	?^psize(p)$?
pswap	swap.c	?^pswap(){$?
pswitch	concur.c	?^pswitch(reqpid)$?
putarea	exec.c	?^char *putarea(area,str)$?
putstack	exec.c	?^char *putstack(sp,str)$?
read	uft.c	?^read(fd, buffer, nbytes)$?
relbuf	bcache.c	?^relbuf(buf)$?
relock	icache.c	?^relock(iptr)$?
retenv	sh.c	?^retenv(env, name, str)$?
rm	inbin.c	?^rm(argc, argv)$?
s_status	swap.c	?^s_status(no,pointer)$?
saveargs	exec.c	?^long *saveargs(sp, argv, env, type)$?
sbrk	exec.c	?^sbrk(newbrk)$?
scan_indir	physmap.c	?^scan_indir(blk, n, i_ptr, mode)$?
segcheck	memory.c	?^segcheck(address, nseg)$?
segscheck	memory.c	?^segscheck(address, nseg)$?
sendgrp	signal.c	?^sendgrp(tty, sig, dosig)$?
sendsig	signal.c	?^sendsig(pid,sig,dosig)$?
set_time	super.c	?^set_time()$?
setbdev	new.c	?^setbdev(dev, pointer)$?
setblk	sort.c	?^setblk(freelist,block)$?
setcdev	new.c	?^setcdev(dev, pointer)$?
setenv	sh.c	?^setenv(argc, argv, env)$?
setgid	sys.c	?^setgid(gid)$?
setid	inbin.c	?^setid(argc,argv)$?
setmem	mmu.c	?^setmem(majseg,minseg,start)$?
setmempid	mmu.c	?^setmempid(majseg, minseg, pid)$?
setseg	memory.c	?^setseg(seg, mem)$?
setuid	sys.c	?^setuid(uid)$?
sh	sh.c	?^sh()$?
shellfile	sh.c	?^shellfile(name, argc, argv, env, eflag)$?
shexec	sh.c	?^shexec(name, argv, env, eflag)$?
shexit	sh.c	?^shexit(n)$?
signal	signal.c	?^int (*signal(sig,func))()$?
sleep	concur.c	?^sleep(chan, pri)$?
smaskoff	concur.c	?^smaskoff(proc, smask)$?
smaskon	concur.c	?^smaskon(proc, smask)$?
smem	inbin.c	?^smem(argc, argv)$?
sortf	inbin.c	?^sortf(argc,argv)$?
sortfree	sort.c	?^sortfree(mdev, min_dev)$?
srchdir	inode.c	?^srchdir(name, iptr, mode, l_iptr)$?
stat	uft.c	?^stat(name, ptr)$?
stickin	swap.c	?^stickin(object)$?
stickout	swap.c	?^stickout(proc)$?
storeargs	exec.c	?^storeargs(argv, env)$?
swapcheck	swap.c	?^swapcheck(object,type)$?
swapclr	swap.c	?^swapclr(){$?
swapin	swap.c	?^swapin(proc)$?
swapino	swap.c	?^swapino(swapno)$?
swapout	swap.c	?^swapout(proc)$?
swappout	swap.c	?^swappout(proc, type)$?
sync	uft.c	?^sync()$?
sys	sys.c	?^sys(){$?
testp	inbin.c	?^testp(){$?
tick	concur.c	?^tick(){$?
tidyseg	swap.c	?^tidyseg(){$?
tpinodes	tsys.c	?^tpinodes(){$?
tpn	tsys.c	?^tpn(iptr)$?
trap	excep.c	?^trap(number)$?
umask	new.c	?^umask(compmode)$?
umount	mount.c	?^umount(special)$?
unlink	inode.c	?^unlink(name)$?
wakeup	concur.c	?^wakeup(chan)$?
wildexp	sh.c	?^wildexp(name, dirname, args)$?
wildstr	sh.c	?^wildstr(estr, name)$?
wisdir	sh.c	?^wisdir(name)$?
wiswild	sh.c	?^wiswild(name)$?
write	uft.c	?^write(fd, buffer, nbytes)$?
xeq	exec.c	?^xeq(name, argv, env)$?
