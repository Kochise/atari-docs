	Routines TRAP #10
	-----------------

Philosophie:
------------

	Voici un petit systŠme extensible … souhait permettant d'ajouter
quelques routines au systŠme. Ces routines sont r‚sidentes et sont
appelables depuis n'importe quel programme.
	J'ai con‡u ceci dans l'esprit de ne pas avoir … r‚‚crire ce qui
existe d‚j…: chaque fois qu'un programmeur … une bonne id‚e, il peut alors
en faire profiter les autres.
	Seconde utilisation: je pense aux programmeurs qui ont besoin de
taper des petits programmes de tests rapides afin de v‚rifier telle ou
telle m‚thode: si le trap #10 apporte assez d'outils, ces essais se feront
bien plus rapidement et acc‚lŠreront le d‚veloppement de logiciels. Bien
s–r, cela n'empˆche pas le programmeur d'inclure finalement la meilleure
m‚thode … son programme avant diffusion pour ne plus ˆtre d‚pendant de mon
systŠme.

Principe:
---------

	Le programme TRAP_10.PRG est l'indispensable coeur du systŠme,
log‚ dans le dossier AUTO, c'est l… qu'il sera le mieux. Son r“le est
d'installer ou de d‚sinstaller les outils et par la suite d'aiguiller les
programmes vers les outils install‚s. Ce COEUR s'appelera le GESTIONNAIRE.
	Pour appeler le GESTIONNAIRE ou n'importe quel outil, la m‚thode
est la mˆme:

	move.l .....,a0		; une table de paramŠtres ‚ventuels
	move.l #$3130xxyy,d0
	trap #10

	Selon les fonctions, la valeur A0 sera utilis‚e ou non.
	Le mot fort de D0 est toujours $3130='10' comme cl‚.
	L'octet yy est le num‚ro de fonction (0 … 255).
	L'octet xx est le num‚ro de sous-fonction (0 … 255).
	Ce systŠme permet d'installer un maximum de 65536 routines...

	La valeur yy=00 est r‚serv‚e au GESTIONNAIRE lui mˆme qui apporte
quelques sous-fonctions. Les autres sont … d‚finir.

	Au retour, si:
		 D0=LONG 10, tout est Ok
		 D0='NULL', fonction non implant‚e, pointeur nul.
		 D0='UNKN', sous-fonction inconnue.

	Si le GESTIONNAIRE ne rencontre pas '10' comme cl‚, il se redirige
alors sur l'ancienne valeur du trap #10: ce systŠme n'est donc pas
bloquant pour les programmes utilisant la mˆme adresse MAIS ALORS il doit
ˆtre install‚ aprŠs eux!


Fonctions du GESTIONNAIRE:
--------------------------

	00/00=demande d'infos
	*********************
		move.l #zone,a0
		move.l #$31300000,d0
		trap #10

		retour: d0=10
			zone=LONG version (ex='1.00')
			zone+4=LONG adresse table 256 pointeurs

	00/01=installer une fonction
	****************************
		entr‚e: zone=WORD numero de fonction d‚sir‚
			zone+2=LONG adresse de la routine (finie par RTS)

		move.l #zone,a0
		move.l #$31300100,d0
		trap #10

		retour: d0=10 alors fonction install‚e
			d0=-1 fonction d‚j… occup‚e!!!

	00/02=d‚sinstaller une fonction
	*******************************
		entr‚e: zone=WORD num‚ro de fonction … lib‚rer

		move.l #zone,a0
		move.l #$31300200,d0
		trap #10

		retour: d0=10 alors ok, fonction d‚sinstall‚e
			d0=-2 emplacement d‚j… libre!!!

Fonctions d‚j… disponibles:
---------------------------

	10/00=tramage 24 bits vers 216 couleurs
	***************************************
		entr‚e: zone=LONG adresse image source 24 bits R,V,B
			zone+4=LONG adresse image dest
			zone+8=WORD largeur en pixels
			zone+10=WORD hauteur en pixels
			zone+12=LONG adresse palette (retour)

		move.l #zone,a0
		move.l #$3130000a,d0
		trap #10

		retour: d0=10 Ok, image tram‚e et palette remplie (648
		octets = 216 fois R,V,B de 0 … 255).

	10/01=tramage 15 bits vers 216 couleurs
	***************************************
		‚quivalent … la sous-fonction 00 sauf que les pixels se
		pr‚sentent au format Intel (2 octets):
		VVVBBBBB xRRRRRVV

		move.l #zone,a0
		move.l #$3130010a,d0
		trap #10

	10/02=tramage 16 bits vers 216 couleurs
	***************************************
		‚quivalent … la sous-fonction 00 sauf que les pixels se
		pr‚sentent au format High Color Falcon (2 octets):

		RRRRRVVV VVVBBBBB

		move.l #zone,a0
		move.l #$3130020a,d0
		trap #10

	20/00 Lancer un TIMER
	*********************
		entr‚e: zone WORD timer (0,1,2,3 pour timers A, B, C, D
				256,257,258,259 pour timers ABCD du TT)
			     WORD fin (0=auto, 1=soft, 2=stopper timer)
			     LONG fr‚quence voulue
			     WORD mode (0=delay, 1=count)
			     LONG routine … ex‚cuter
			     LONG fr‚quence r‚elle (retour)
			     WORD data (retour)
			     WORD control (retour)

		lea zone,a0
		move.l #$31300014,d0
		trap #10

		retour: les valeurs fr‚quence r‚elle, data et control sont
			renvoy‚es dans la zone et le timer est lanc‚.

		Le plus commun est:
		timer=0, fin=0, mode=0 ce qui correspond au Timer A du MFP
	ST bas‚ sur le temps avec fin automatique d'interruption. La
	routine … ex‚cuter se termine par RTE, elle doit sauvegarder TOUS
	les registres qu'elle utilise.

	20/01 Calculer fr‚quence
	************************
		entr‚e zone WORD inutilis‚
			    WORD inutilis‚
			    LONG fr‚quence voulue
			    WORD inutilis‚
			    LONG inutilis‚
			    LONG fr‚quence r‚elle (retour)
			    WORD data (retour)
			    WORD control (retour)

		lea zone,a0
		move.l #$31300114,d0
		trap #10

		Cette fonction est une limitation de la pr‚c‚dente, seule
		une valeur est retenue en entr‚e (la fr‚quence), les mˆmes
		sont retourn‚es dans la zone.
		Il faut savoir que l'organisation des timers ne permet pas
		d'obtenir n'importe quelle fr‚quence au hertz prŠs. C'est
		ainsi qu'il y aura souvent un d‚calage entre la fr‚quence
		voulue et la fr‚quence la plus proche disponible.


Ajouter son propre outil:
-------------------------

	Ce qu'il faut savoir:
	- votre routine doit tourner en Superviseur (en effet, nous sommes
… l'int‚rieur d'un TRAP!)
	- elle peut modifier D0,A0,A1
	- elle doit sauver et restaurer TOUS les autres registres
	- elle doit se terminer par RTS
	- elle re‡oit en entr‚e la valeur A0 envoy‚e par le programme
	appelant ainsi que dans D0.W le num‚ro de sous fonction D0=$00xx.
	- elle doit elle mˆme g‚rer les valeurs de retour D0=10 (ok) ou
	D0='UNKN' pour une sous-fonction inconnue.
	- par souci de compatibilit‚, il serait bon de n'utiliser que des
	codes 68000 afin que toutes les machines en profitent.

	Voici un programme r‚sident ajoutant un outil de recherche de
COOKIE. Une fois install‚, un programme l'appellera ainsi:

	move.l #buffer,a0
	move.l #'_CPU',(a0)	; rechercher le cookie _CPU
	move.l #$31300032,d0	; $32=50
	trap #10

	Au retour:
		d0='NULL' outil absent!
		d0='UNKN' sous-fonction absente (improbable!)
		d0=10, Ok
                        buffer=LONG valeur du cookie
                d0=0, cookie non trouv‚



*********** d‚but du source

debut:
	bra demarrage

cherche_cookie:
	cmp #0,d0	; sous-fonction D0?
	bne.s .inconnu	; non, alors renvoyer code erreur
	move.l (a0),d0	; cookie … chercher
	move.l $5a0.w,a1	; adresse cookies
	cmp.l #0,a1
	beq.s .pas_trouve
.boucle:
	tst.l (a1)	; cookie vide?
	beq.s .pas_trouve
	cmp.l (a1),d0	; est-ce celui qu'on cherche?
	beq.s .trouve	; OUI!!!
	addq.l #8,a1	; cookie suivant
	bra.s .boucle
.trouve:
	move.l 4(a1),(a0)	; remplace le cookie par sa valeur
	moveq #10,d0	; pas d'erreur
	rts
.pas_trouve:
	moveq #0,d0	; cookie non trouv‚
	rts
.inconnu:
	move.l #'UNKN',d0
	rts

demarrage:
	; r‚duction de l'espace occup‚

	move.l 4(sp),a0
	move.l $18(a0),a1
	add.l $1c(a0),a1
	add.l #$200,a1
	move.l a1,sp
	sub.l a0,a1
	move.l a1,-(sp)
	move.l a0,-(sp)
	clr.w -(sp)
	GEMDOS $4a,12

        ; installation de notre outil sur la fonction 50

	lea zone(pc),a0
	move.l #$31300100,d0
	trap #10
	cmp.l #10,d0	; retour correct?
	beq ok		; oui!

	pea zut(pc)	; sinon, afficher erreur
	move #9,-(sp)
	trap #1
	addq.l #6,sp

	clr -(sp)	; et quitter...
	trap #1

ok:
	pea texte(pc)	; si Ok, afficher succŠs
	move #9,-(sp)
	trap #1
	addq.l #6,sp

	clr -(sp)	; et laisser la routine r‚sidente
	lea debut(pc),a0
	lea demarrage+256(pc),a1
	sub.l a0,a1
	move.l a1,-(sp)
	move #49,-(sp)
	trap #1		; et quitter

	data

zone:	dc.w 50		; fonction 50 demand‚e
	dc.l cherche_cookie	; adresse de mon outil

texte:
	dc.b 13,10,"Recherche de cookies (trap #10)"
	dc.b 13,10,"          install‚!"
	dc.b 13,10,"(c) 1998 gtello@wanadoo.fr"
	dc.b 13,10,0

zut:
	dc.b 13,10,"Recherche de cookies (trap #10)"
	dc.b 13,10," NON INSTALLEE! Emplacement 50 "
	dc.b 13,10,"       d‚j… occup‚.....        "
	dc.b 13,10,7,0

	end

************* fin du source

