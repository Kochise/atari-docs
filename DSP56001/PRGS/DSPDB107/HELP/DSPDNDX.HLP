{Desk}
{Informations box}

{File operations}
{Open a .LOD file}
{Restart current .LOD file}
{Load an ASCII file in a window}
{Load a file into DSP memory}
{Save part of DSP memory into a file}
{Set DSPDebug preferences}
{Save DSPDebug desktop preferences}
{Configure windows font}
{Set printer configuration}
{Print top window}
{Exit DSPDebug}

{Edit}
{Copy DSP memory}
{Fill DSP memory}
{Modify breakpoint}
{Delete breakpoint}
{Delete all breakpoints}
{Edit Host interface port registers}
{Edit Synchronous Serial Interface port registers}
{Request and send host command}

{Context actions}
{Single Step Into current instruction (enters JMP, JSR and JScc){;
{Single Step Over instruction (executes JMP, JSR and JScc){;
{Skip current instruction{;
{Resume execution from the current instruction{;
{Halt program execution{;
{Reset DSP}
{Send data from a file to the DSP}
{Receive data from the DSP into a file}

{Actions}
{Evaluate an expression, display the result in hex, frac and decimal}
{Set a breakpoint}
{Lock disassembly or memory dump top window starting address to an expression}
{Set starting address of top window}
{Find a word into memory}
{Find and replace a word into memory (not finished)}
{Find the next occurrence of the same word}
{Find the previous occurrence of the same word}

{Windows}
{Registers display}
{Disassembly DSP memory display}
{DSP memory display, in hex or fractional}
{Stack display}
{Breakpoints list}
{Variables list}
{Messages display}
{Bring a chosen window to front}
{Cascade open windows}
{Tile open windows}
{Cycle through the opened windows}
{Close top window}

{Help}
{Main help index}
{DSPDebug help index}
{Registers help index}
{Assembly language help index}
{Host interface help index}
{Synchronous Serial Interface help index}

{Current free memory in bytes}

{Set P ram size}
{Set X ram size}
{Set Y ram size}
{Will automatically save windows configuration}
{Inhibits display of some (superfluous) warning messages}
{Removes in-line help (the one you are reading now)}
{Set tab size (used in Disassembly and File display windows)}
{Set and save new preferences}
{Set new preferences}

{Destination memory address}
{Destination memory P ram}
{Destination memory X ram}
{Destination memory Y ram}
{Destination memory L ram}
{Load as 32-bit padded words}
{Selects file and loads it into DSP memory}

{Source memory address}
{Source memory P ram}
{Source memory X ram}
{Source memory Y ram}
{Source memory L ram}
{Selects filename and saves DSP memory}
{Save 32-bit padded word}
{Save high 8-bit portion of 24-bit word}
{Save middle 8-bit portion of 24-bit word}
{Save low 8-bit portion of 24-bit word}
{Save file length}

{Copy source address}
{Copy destination address}
{Length of copy (in words)}
{Copy from P ram}
{Copy from X ram}
{Copy from Y ram}
{Copy from L ram}
{Copy to P ram}
{Copy to X ram}
{Copy to Y ram}
{Copy to L ram}
{Performs the copy operation}

{Fill start address}
{Fill initial value}
{Fill value increment}
{Fill length}
{Fill in P ram}
{Fill in X ram}
{Fill in Y ram}
{Fill in L ram}
{Performs the fill operation}

{Search from address}
{Search value}
{Forward search}
{Backward search}
{Search in P ram}
{Search in X ram}
{Search in Y ram}
{Search in L ram}
{Performs the search operation}

{Expression to evaluate}
{Evaluation result in decimal radix}
{Evaluation result in 24-bit DSP fractional}
{Evaluation result in hexadecimal radix}
{Performs expression evaluation}

{Breakpoint address}
{Breakpoint starting counter}
{Optional breakpoint stop condition}
{Set breakpoint on/off}
{Set as permanent breakpoint}
{Breakpoint condition last result}
{Sets the breakpoint}

{New window starting address}
{Display P ram}
{Display X ram}
{Display Y ram}
{Display L ram}
{Performs address goto}

{Expression to lock the window with}
{Lock to P ram}
{Lock to X ram}
{Lock to Y ram}
{Lock to L ram}
{Locks the window}

{Current sent words number}
{Total words number to send to the DSP}
{Pause sending}
{Continue sending}
{End sending}
{Send from 32-bit padded words file}
{Begins sending to the DSP}

{Save padded 32-bit words in file}
{Save high 8-bit portion of 24-bit word}
{Save middle 8-bit portion of 24-bit word}
{Save low 8-bit portion of 24-bit word}
{Receive buffer size}
{Current received words number in buffer}
{Saved words number}
{Flush buffer content to file}
{Clear receive buffer}
{Temporary suspend receiving}
{Continue receiving}
{End receiving (this does NOT flush the buffer to file)}
{Begins receiving from the DSP}

{Host Flag 3 (HCR bit 4)}
{Host Flag 2 (HCR bit 3)}
{Host Command Interrupt Enable (HCR bit 2)}
{Host Transmit Interrupt Enable (HCR bit 1)}
{Host Receive Interrupt Enable (HCR bit 0)}
{DMA Status (HSR bit 7)}
{Host Flag 1 (HSR bit 4)}
{Host Flag 0 (HSR bit 3)}
{Host Command Pending (HSR Bit 2)}
{Host transmit Data Empty (HSR bit 1)}
{Host Receive Data Full (HSR bit 0)}

