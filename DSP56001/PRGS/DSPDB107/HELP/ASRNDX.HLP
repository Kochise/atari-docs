{PREFACE}

{CHAPTER 1}.	DSP56000 MACRO ASSEMBLER
		1.1	INTRODUCTION
		1.2	ASSEMBLY LANGUAGE
		1.3	INSTALLING THE ASSEMBLER
		1.4	RUNNING THE ASSEMBLER
		1.5	ASSEMBLER PROCESSING
		1.6	DEFINITION OF TERMS
		1.7	ASSEMBLER SUPPORT FOR DIGITAL SIGNAL PROCESSING

{CHAPTER 2}.	WRITING ASSEMBLY LANGUAGE PROGRAMS
		2.1	INPUT FILE FORMAT
		2.2	SYMBOL NAMES
		2.3	STRINGS
		2.4	SOURCE STATEMENT FORMAT
			2.4.1	Label Field
			2.4.2	Operation Field
			2.4.3	Operand Field
			2.4.4	Data Transfer Fields
			2.4.5	Comment Field
		2.5	ASSEMBLER OUTPUT

{CHAPTER 3}.	EXPRESSIONS
		3.1	INTRODUCTION
		3.2	ABSOLUTE AND RELATIVE EXPRESSIONS
		3.3	EXPRESSION MEMORY SPACE ATTRIBUTE
		3.4	INTERNAL EXPRESSION REPRESENTATION
		3.5	CONSTANTS
			3.5.1	Numeric Constants
			3.5.2	String Constants
		3.6	OPERATORS
			3.6.1	Unary operators
			3.6.2	Arithmetic operators
			3.6.3	Bitwise operators
			3.6.4	Shift operators
			3.6.5	Relational operators
			3.6.6	Logical operators
		3.7	OPERATOR PRECEDENCE
		3.8	FUNCTIONS

{CHAPTER 4}.	SOFTWARE PROJECT MANAGEMENT
		4.1	INTRODUCTION
		4.2	SECTIONS
		4.3	SECTIONS AND DATA HIDING
			4.3.1	Sections and Symbols
			4.3.2	Sections and Macros
			4.3.3	Nested and Fragmented Sections
		4.4	SECTIONS AND RELOCATION
		4.5	ADDRESS ASSIGNMENT
			4.5.1	Buffers
			4.5.2	The ORG Directive
			4.5.3	Overlays
			4.5.4	Address Assignment Examples
		4.6	EXAMPLE 1:  MULTI-PROGRAMMER ENVIRONMENT
			4.6.1	Absolute Mode Implementation
			4.6.2	Relative Mode Implementation
		4.7	EXAMPLE 2:  OVERLAYS
			4.7.1	Absolute Mode Implementation
			4.7.2	Relative Mode Implementation

{CHAPTER 5}.	MACRO OPERATIONS AND CONDITIONAL ASSEMBLY
		5.1	MACRO OPERATIONS
		5.2	MACRO LIBRARIES
		5.3	MACRO DEFINITION
		5.4	MACRO CALLS
		5.5	DUMMY ARGUMENT OPERATORS
			5.5.1	Dummy argument concatenation operator - \
			5.5.2	Return value operator - ?
			5.5.3	Return hex value operator - %
			5.5.4	Dummy argument string operator - "
		5.6	DUP, DUPA, DUPC DIRECTIVES
		5.7	CONDITIONAL ASSEMBLY

{CHAPTER 6}.	ASSEMBLER SIGNIFICANT CHARACTERS AND DIRECTIVES
		6.1	INTRODUCTION
		6.2	ASSEMBLER SIGNIFICANT CHARACTERS
		6.3	ASSEMBLER DIRECTIVES
			6.3.1	Assembly Control
			6.3.2	Symbol Definition
			6.3.3	Data Definition/Storage Allocation
			6.3.4	Listing Control and Options
			6.3.5	Object File Control
			6.3.6	Macros and Conditional Assembly
			6.3.7	Structured Programming
			{BADDR}
			{BSC}
			{BSM}
			{BSR}
			{BUFFER}
			{COBJ}
			{COMMENT}
			{DC}
			{DEFINE}
			{DS}
			{DSM}
			{DSR}
			{DUP}
			{DUPA}
			{DUPC}
			{END}
			{ENDBUF}
			{ENDIF}
			{ENDM}
			{ENDSEC}
			{EQU}
			{EXITM}
			{FAIL}
			{HIMEM}
			{IDENT}
			{IF}
			{INCLUDE}
			{LIST}
			{LOMEM}
			{LSTCOL}
			{MACLIB}
			{MACRO}
			{MODE}
			{MSG}
			{NOLIST}
			{OPT}
			{ORG}
			{PAGE}
			{PMACRO}
			{PRCTL}
			{RADIX}
			{RDIRECT}
			{SECTION}
			{SET}
			{STITLE}
			{SYMOBJ}
			{TITLE}
			{UNDEF}
			{WARN}
			{XDEF}
			{XREF}

{CHAPTER 7}.	STRUCTURED CONTROL STATEMENTS
		7.1	INTRODUCTION
		7.2	STRUCTURED CONTROL DIRECTIVES
		7.3	SYNTAX
			7.3.1	.IF Statement
			7.3.2	.WHILE Statement
			7.3.3	.REPEAT Statement
			7.3.4	.FOR Statement
			7.3.5	.LOOP Statement
			7.3.6	.BREAK Statement
			7.3.7	.CONTINUE Statement
		7.4	SIMPLE AND COMPOUND EXPRESSIONS
			7.4.1		Simple Expressions
				7.4.1.1	Condition Code Expressions
				7.4.1.2	Operand Comparison Expressions
			7.4.2		Compound Expressions
		7.5	STATEMENT FORMATTING
			7.5.1	Expression Formatting
			7.5.2	.FOR/.LOOP Formatting
			7.5.3	Assembly Listing Format
		7.6	EFFECTS ON THE PROGRAMMER'S ENVIRONMENT

{APPENDICE A}.	ASCII CHARACTER CODES

{APPENDICE B}.	INSTRUCTION SET SUMMARY
			B.1	ARITHMETIC INSTRUCTIONS
			B.2	LOGICAL INSTRUCTIONS
			B.3	BIT MANIPULATION INSTRUCTIONS
			B.4	LOOP INSTRUCTIONS
			B.5	MOVE INSTRUCTIONS
			B.6	PROGRAM CONTROL INSTRUCTIONS

{APPENDICE C}.	DIRECTIVE SUMMARY
			C.1	ASSEMBLY CONTROL
			C.2	SYMBOL DEFINITION
			C.3	DATA DEFINITION/STORAGE ALLOCATION
			C.4	LISTING CONTROL AND OPTIONS
			C.5	OBJECT FILE CONTROL
			C.6	MACROS AND CONDITIONAL ASSEMBLY
			C.7	STRUCTURED PROGRAMMING

{APPENDICE D}.	ASSEMBLER MESSAGES
			D.1	INTRODUCTION
			D.2	COMMAND LINE ERRORS
			D.3	WARNINGS
			D.4	ERRORS
			D.5	FATAL ERRORS

{APPENDICE E}.	ASSEMBLER LISTING FILE FORMAT
			E.1	INTRODUCTION
			E.2	LISTING FILE COMMENTARY
			E.3	CROSS-REFERENCE FORMAT
			E.4	MEMORY UTILIZATION REPORT FORMAT

{APPENDICE F}.	DSP56000 LINK FILE FORMAT
			F.1	INTRODUCTION
			F.2	RECORD DEFINITIONS
				F.2.1	START Record
				F.2.2	SECTION Record
				F.2.3	ENDSEC Record
				F.2.4	DATA Record
				F.2.5	BLOCKDATA Record
				F.2.6	BUFFER Record
				F.2.7	OVERLAY Record
				F.2.8	LNKMOD Record
				F.2.9	SYMBOL Record
			F.2.10	XREF Record
			F.2.11	COMMENT Record
			F.2.12	END Record
			F.3	LINK FILE EXAMPLE
			F.4	LINK FILE DATA EXPRESSION FORMAT
				F.4.1	Data Expression Generation
				F.4.2	Data Expression Interpretation
					F.4.2.1	User Expression - { ... }
					F.4.2.2	Relocatable Expression - [ ... ]
					F.4.2.3	Memory Space Operator - @
					F.4.2.4	Bit Size Operator - #
					F.4.2.5	Memory Attribute Operator - :

{APPENDICE G}.	DSP56000 LOAD FILE FORMAT
			G.1	INTRODUCTION
			G.2	RECORD DEFINITIONS
				G.2.1	START Record
				G.2.2	DATA Record
				G.2.3	BLOCKDATA Record
				G.2.4	SYMBOL Record
				G.2.5	COMMENT Record
				G.2.6	END Record
			G.3	LOAD FILE EXAMPLE
			G.4	PARSING THE LOAD FILE

{APPENDICE H}.	MACHINE-DEPENDENT INFORMATION


